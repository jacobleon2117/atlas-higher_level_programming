>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> geo = BaseGeometry()
>>> type(geo)
<class '7-base_geometry.BaseGeometry'>

>>> geo.integer_validator("name", "Frank")
Traceback (most recent call last):
    ...
TypeError: name must be an integer

>>> geo.integer_validator("age", -42)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0

>>> geo.integer_validator("age", 0)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0

>>> geo.integer_validator("value", 12)


>>> geo.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented

>>> geo.integer_validator()
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> geo.integer_validator("age")
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> geo.integer_validator("age", [12])
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> geo.integer_validator("age", True)
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> geo.integer_validator("age", 4.13)
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> geo.integer_validator("age", (4, ))
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> geo.integer_validator("age", {2, 42})
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> geo.integer_validator("age", None)
Traceback (most recent call last):
    ...
TypeError: age must be an integer
